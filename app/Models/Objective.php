<?php

namespace App\Models;

use App\Traits\HasPoints;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Str;
use Spatie\MediaLibrary\HasMedia\HasMedia;
use Spatie\MediaLibrary\HasMedia\HasMediaTrait;

class Objective extends Model implements HasMedia
{
    use HasFactory, HasMediaTrait, HasPoints;

    protected $fillable = [
        'name',
        'content',
        'module_id',
        'video',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($model) {
            $model->slug = Str::slug($model->name);
        });

        self::deleting(function (Objective $objective) {
            dd('delete');

        });
    }

    public function getRouteKeyName()
    {
        return 'slug';
    }

    public function module()
    {
        return $this->belongsTo(Module::class, 'module_id', 'id');
    }

    public function isSeen(){
        $seen = $this->belongsToMany(User::class,'objective_seen','objective_id','student_id')
            ->where('student_id',Auth::id())
            ->withTimestamps();
        return $seen;
    }

    public function isSeenObj($id){
        $seen = $this->belongsToMany(User::class,'objective_seen','objective_id','student_id')
            ->where('student_id',Auth::id())
            ->where('objective_id',$id)
            ->withTimestamps();
        return $seen;
    }


    public function questions(){
        return $this->hasMany(Question::class,'objective_id','id');
    }
}

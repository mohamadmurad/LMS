<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;

class Module extends Model
{
    use HasFactory;

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($model) {
            $model->slug = Str::slug($model->name);
        });

        self::deleting(function (Module $module) {


        });;
    }

    protected $fillable = [
        'name',
        'slug',
        'description',
        'subject_id',
    ];


    protected $appends = [
        'is_completed'
    ];

    public function getRouteKeyName()
    {
        return 'slug';
    }

    public function subject()
    {
        return $this->belongsTo(Subject::class, 'subject_id', 'id');
    }

    public function objectives(){
        return $this->hasMany(Objective::class,'module_id','id');
    }


    public function VideoObjectives()
    {
        return $this->objectives()->whereHas('media');
    }

    public function ReadingObjectives()
    {
        return $this->objectives()->doesntHave('media');
    }

    public function getIsCompletedAttribute()
    {

        $examComplete = $this->exam ? $this->exam->authSubmit()->first() : null;
        $objectives = $this->objectives;
        $objectiveSeen = 0;
        foreach ($objectives as $objective) {
            if ($objective->isSeen->first()) {
                $objectiveSeen++;
            }

        }

        if (($this->exam && $examComplete) && $objectiveSeen == $objectives->count() || (!$this->exam ) && $objectiveSeen == $objectives->count()) {
            return true;
        }


        return false;
    }

}
